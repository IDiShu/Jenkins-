pipeline {
    agent any
    
    stages {
        stage('Connect') {
            steps {
                sshagent(credentials: ['Prod']) {
                    sh "ssh -o StrictHostKeyChecking=no your_ip_server"
                }
            }
        }
        
        stage('Docker Login') {
            steps {
                sh 'ssh -o StrictHostKeyChecking=no your_ip_server docker login -u your_login -p your_passwd'
            }
        }
        
        stage('Вытягиваем последний образ из Docker Hub') {
            steps {
                sshagent(credentials: ['Prod']) {
                    sh "ssh -o StrictHostKeyChecking=no your_ip_server docker pull you_container"
                }
            }
        }
        
        stage('Останавливаем и удаляем предыдущий контейнер') {
            steps {
                sshagent(credentials: ['Prod']) {
                    sh """
                        if ssh -o StrictHostKeyChecking=no your_ip_server docker ps -a | grep my-container; then
                            ssh -o StrictHostKeyChecking=no your_ip_server docker stop my-container
                            ssh -o StrictHostKeyChecking=no your_ip_server docker rm my-container
                        fi
                    """
                }
            }
        }

        stage('Создаем Docker Volume для SSL-ключей') {
            steps {
                sshagent(credentials: ['Prod']) {
                    sh "ssh -o StrictHostKeyChecking=no your_ip_server docker volume create ssl-keys"
                }
            }
        }
        
        stage('Запускаем контейнер с последним образом на порту 8000') {
            steps {
                sshagent(credentials: ['Prod']) {
                    sh "ssh -o StrictHostKeyChecking=no your_ip_server docker run -d  -p 80:80 -p 443:443 -v /etc/nginx/sites-available/you_config:/etc/nginx/conf.d/default.conf -e TZ=Europe/Kiev -e REACT_APP_API_URL=http://your_ip_server:8080 -e REACT_APP_WS_URL=ws://your_ip_server:8080 --name my-container you_container"
                }
            }
        }
        
        stage('Проверяем работающие контейнеры') {
            steps {
                sshagent(credentials: ['Prod']) {
                    sh "ssh -o StrictHostKeyChecking=no your_ip_server docker ps -a"
                }
            }
        }
        stage('Docker Logout') {
            steps {
                sh 'ssh your_ip_server docker logout'
            }
        }
    }
}
